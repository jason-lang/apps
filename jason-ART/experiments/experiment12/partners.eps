%!PS-Adobe-2.0 EPSF-2.0
%%Title: experiments/experiment12/partners.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Wed Oct  1 14:35:48 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (experiments/experiment12/partners.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Jomi Fred Hubner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct  1 14:35:48 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
810 705 M
63 0 V
6021 0 R
-63 0 V
stroke
702 705 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
810 1529 M
63 0 V
6021 0 R
-63 0 V
stroke
702 1529 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5)]
] -60.0 MRshow
1.000 UL
LTb
810 2352 M
63 0 V
6021 0 R
-63 0 V
stroke
702 2352 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MRshow
1.000 UL
LTb
810 3176 M
63 0 V
6021 0 R
-63 0 V
stroke
702 3176 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15)]
] -60.0 MRshow
1.000 UL
LTb
810 4000 M
63 0 V
6021 0 R
-63 0 V
stroke
702 4000 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MRshow
1.000 UL
LTb
810 4824 M
63 0 V
6021 0 R
-63 0 V
stroke
702 4824 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 25)]
] -60.0 MRshow
1.000 UL
LTb
810 540 M
0 63 V
0 4221 R
0 -63 V
stroke
810 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1450 540 M
0 63 V
0 4221 R
0 -63 V
stroke
1450 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2)]
] -60.0 MCshow
1.000 UL
LTb
2091 540 M
0 63 V
0 4221 R
0 -63 V
stroke
2091 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 4)]
] -60.0 MCshow
1.000 UL
LTb
2731 540 M
0 63 V
0 4221 R
0 -63 V
stroke
2731 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 6)]
] -60.0 MCshow
1.000 UL
LTb
3372 540 M
0 63 V
0 4221 R
0 -63 V
stroke
3372 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 8)]
] -60.0 MCshow
1.000 UL
LTb
4012 540 M
0 63 V
0 4221 R
0 -63 V
stroke
4012 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
4653 540 M
0 63 V
0 4221 R
0 -63 V
stroke
4653 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 12)]
] -60.0 MCshow
1.000 UL
LTb
5293 540 M
0 63 V
0 4221 R
0 -63 V
stroke
5293 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 14)]
] -60.0 MCshow
1.000 UL
LTb
5933 540 M
0 63 V
0 4221 R
0 -63 V
stroke
5933 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 16)]
] -60.0 MCshow
1.000 UL
LTb
6574 540 M
0 63 V
0 4221 R
0 -63 V
stroke
6574 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 18)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
810 4824 N
810 540 L
6084 0 V
0 4284 V
-6084 0 V
Z stroke
LCb setrgbcolor
180 2682 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (requested opinions)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
3852 90 M
[ [(Helvetica) 180.0 0.0 true true 0 (step)]
] -60.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCa setrgbcolor
LTb
1782 4671 M
[ [(Helvetica) 180.0 0.0 true true 0 (Cheating)]
[(Helvetica) 144.0 -54.0 true true 0 (1)]
] -42.0 MRshow
LT0
LCa setrgbcolor
1890 4671 M
495 0 V
810 1529 M
968 1206 L
159 -198 V
1285 887 L
159 -73 V
158 -44 V
159 -27 V
158 -16 V
159 -9 V
158 -6 V
159 -3 V
158 -2 V
159 -1 V
158 0 V
159 -1 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
158 0 V
159 0 V
61 0 V
810 1529 Pls
968 1206 Pls
1127 1008 Pls
1285 887 Pls
1444 814 Pls
1602 770 Pls
1761 743 Pls
1919 727 Pls
2078 718 Pls
2236 712 Pls
2395 709 Pls
2553 707 Pls
2712 706 Pls
2870 706 Pls
3029 705 Pls
3187 705 Pls
3346 705 Pls
3504 705 Pls
3663 705 Pls
3821 705 Pls
3980 705 Pls
4138 705 Pls
4297 705 Pls
4455 705 Pls
4614 705 Pls
4772 705 Pls
4931 705 Pls
5089 705 Pls
5248 705 Pls
5406 705 Pls
5565 705 Pls
5723 705 Pls
5882 705 Pls
6040 705 Pls
6199 705 Pls
6357 705 Pls
6516 705 Pls
6674 705 Pls
6833 705 Pls
2137 4671 Pls
1.000 UP
1.000 UL
LT1
LCa setrgbcolor
LTb
1782 4491 M
[ [(Helvetica) 180.0 0.0 true true 0 (Lazy)]
[(Helvetica) 144.0 -54.0 true true 0 (1)]
] -42.0 MRshow
LT1
LCa setrgbcolor
1890 4491 M
495 0 V
810 1693 M
968 1366 L
159 -113 V
158 -9 V
159 38 V
158 52 V
159 54 V
158 47 V
159 40 V
158 32 V
159 24 V
158 18 V
159 11 V
158 7 V
159 3 V
158 1 V
159 -1 V
158 -2 V
159 -3 V
158 -2 V
159 -3 V
158 -2 V
159 -3 V
158 -2 V
159 -3 V
158 -3 V
159 -2 V
158 -3 V
159 -2 V
158 -2 V
159 -1 V
158 -1 V
159 0 V
158 1 V
159 2 V
158 2 V
159 3 V
158 4 V
159 4 V
61 2 V
810 1693 Crs
968 1366 Crs
1127 1253 Crs
1285 1244 Crs
1444 1282 Crs
1602 1334 Crs
1761 1388 Crs
1919 1435 Crs
2078 1475 Crs
2236 1507 Crs
2395 1531 Crs
2553 1549 Crs
2712 1560 Crs
2870 1567 Crs
3029 1570 Crs
3187 1571 Crs
3346 1570 Crs
3504 1568 Crs
3663 1565 Crs
3821 1563 Crs
3980 1560 Crs
4138 1558 Crs
4297 1555 Crs
4455 1553 Crs
4614 1550 Crs
4772 1547 Crs
4931 1545 Crs
5089 1542 Crs
5248 1540 Crs
5406 1538 Crs
5565 1537 Crs
5723 1536 Crs
5882 1536 Crs
6040 1537 Crs
6199 1539 Crs
6357 1541 Crs
6516 1544 Crs
6674 1548 Crs
6833 1552 Crs
2137 4491 Crs
1.000 UP
1.000 UL
LT2
LCa setrgbcolor
LTb
1782 4311 M
[ [(Helvetica) 180.0 0.0 true true 0 (Lazy)]
[(Helvetica) 144.0 -54.0 true true 0 (2)]
] -42.0 MRshow
LT2
LCa setrgbcolor
1890 4311 M
495 0 V
810 1364 M
968 1151 L
159 -60 V
158 15 V
159 49 V
158 58 V
159 56 V
158 50 V
159 43 V
158 35 V
159 30 V
158 26 V
159 24 V
158 22 V
159 21 V
158 22 V
159 22 V
158 21 V
159 22 V
158 21 V
159 21 V
158 19 V
159 18 V
158 16 V
159 14 V
158 12 V
159 11 V
158 10 V
159 8 V
158 8 V
159 6 V
158 6 V
159 6 V
158 5 V
159 5 V
158 5 V
159 4 V
158 4 V
159 3 V
61 1 V
810 1364 Star
968 1151 Star
1127 1091 Star
1285 1106 Star
1444 1155 Star
1602 1213 Star
1761 1269 Star
1919 1319 Star
2078 1362 Star
2236 1397 Star
2395 1427 Star
2553 1453 Star
2712 1477 Star
2870 1499 Star
3029 1520 Star
3187 1542 Star
3346 1564 Star
3504 1585 Star
3663 1607 Star
3821 1628 Star
3980 1649 Star
4138 1668 Star
4297 1686 Star
4455 1702 Star
4614 1716 Star
4772 1728 Star
4931 1739 Star
5089 1749 Star
5248 1757 Star
5406 1765 Star
5565 1771 Star
5723 1777 Star
5882 1783 Star
6040 1788 Star
6199 1793 Star
6357 1798 Star
6516 1802 Star
6674 1806 Star
6833 1809 Star
2137 4311 Star
1.000 UP
1.000 UL
LT3
LCa setrgbcolor
LTb
1782 4131 M
[ [(Helvetica) 180.0 0.0 true true 0 (Honest)]
[(Helvetica) 144.0 -54.0 true true 0 (1)]
] -42.0 MRshow
LT3
LCa setrgbcolor
1890 4131 M
495 0 V
810 1693 M
968 1420 L
159 -18 V
158 81 V
159 106 V
158 102 V
159 87 V
158 72 V
159 59 V
158 51 V
159 45 V
158 43 V
159 42 V
158 41 V
159 41 V
158 40 V
159 39 V
158 36 V
159 33 V
158 31 V
159 27 V
158 24 V
159 20 V
158 18 V
159 15 V
158 13 V
159 11 V
158 10 V
159 8 V
158 7 V
159 6 V
158 6 V
159 4 V
158 4 V
159 3 V
158 3 V
159 2 V
158 1 V
159 0 V
61 0 V
810 1693 Box
968 1420 Box
1127 1402 Box
1285 1483 Box
1444 1589 Box
1602 1691 Box
1761 1778 Box
1919 1850 Box
2078 1909 Box
2236 1960 Box
2395 2005 Box
2553 2048 Box
2712 2090 Box
2870 2131 Box
3029 2172 Box
3187 2212 Box
3346 2251 Box
3504 2287 Box
3663 2320 Box
3821 2351 Box
3980 2378 Box
4138 2402 Box
4297 2422 Box
4455 2440 Box
4614 2455 Box
4772 2468 Box
4931 2479 Box
5089 2489 Box
5248 2497 Box
5406 2504 Box
5565 2510 Box
5723 2516 Box
5882 2520 Box
6040 2524 Box
6199 2527 Box
6357 2530 Box
6516 2532 Box
6674 2533 Box
6833 2533 Box
2137 4131 Box
1.000 UP
1.000 UL
LT4
LCa setrgbcolor
LTb
1782 3951 M
[ [(Helvetica) 180.0 0.0 true true 0 (Honest)]
[(Helvetica) 144.0 -54.0 true true 0 (2)]
] -42.0 MRshow
LT4
LCa setrgbcolor
1890 3951 M
495 0 V
810 1364 M
968 1261 L
159 136 V
158 202 V
159 195 V
158 165 V
159 131 V
158 100 V
159 75 V
158 55 V
159 40 V
158 27 V
159 17 V
158 12 V
159 7 V
158 5 V
159 4 V
158 5 V
159 6 V
158 8 V
159 10 V
158 11 V
159 12 V
158 13 V
159 13 V
158 12 V
159 11 V
158 9 V
159 8 V
158 6 V
159 4 V
158 2 V
159 2 V
158 1 V
159 0 V
158 0 V
159 1 V
158 1 V
159 1 V
61 1 V
810 1364 BoxF
968 1261 BoxF
1127 1397 BoxF
1285 1599 BoxF
1444 1794 BoxF
1602 1959 BoxF
1761 2090 BoxF
1919 2190 BoxF
2078 2265 BoxF
2236 2320 BoxF
2395 2360 BoxF
2553 2387 BoxF
2712 2404 BoxF
2870 2416 BoxF
3029 2423 BoxF
3187 2428 BoxF
3346 2432 BoxF
3504 2437 BoxF
3663 2443 BoxF
3821 2451 BoxF
3980 2461 BoxF
4138 2472 BoxF
4297 2484 BoxF
4455 2497 BoxF
4614 2510 BoxF
4772 2522 BoxF
4931 2533 BoxF
5089 2542 BoxF
5248 2550 BoxF
5406 2556 BoxF
5565 2560 BoxF
5723 2562 BoxF
5882 2564 BoxF
6040 2565 BoxF
6199 2565 BoxF
6357 2565 BoxF
6516 2566 BoxF
6674 2567 BoxF
6833 2568 BoxF
2137 3951 BoxF
1.000 UP
1.000 UL
LT5
LCa setrgbcolor
LTb
1782 3771 M
[ [(Helvetica) 180.0 0.0 true true 0 (Honest)]
[(Helvetica) 144.0 -54.0 true true 0 (3)]
] -42.0 MRshow
LT5
LCa setrgbcolor
1890 3771 M
495 0 V
810 1364 M
158 -78 V
159 108 V
158 163 V
159 158 V
158 132 V
159 102 V
158 78 V
159 59 V
158 45 V
159 37 V
158 30 V
159 26 V
158 23 V
159 20 V
158 19 V
159 16 V
158 15 V
159 11 V
158 9 V
159 6 V
158 3 V
159 0 V
158 -3 V
159 -5 V
158 -8 V
159 -10 V
158 -11 V
159 -12 V
158 -14 V
159 -14 V
158 -14 V
159 -14 V
158 -15 V
159 -14 V
158 -13 V
159 -13 V
158 -12 V
159 -11 V
61 -4 V
810 1364 Circle
968 1286 Circle
1127 1394 Circle
1285 1557 Circle
1444 1715 Circle
1602 1847 Circle
1761 1949 Circle
1919 2027 Circle
2078 2086 Circle
2236 2131 Circle
2395 2168 Circle
2553 2198 Circle
2712 2224 Circle
2870 2247 Circle
3029 2267 Circle
3187 2286 Circle
3346 2302 Circle
3504 2317 Circle
3663 2328 Circle
3821 2337 Circle
3980 2343 Circle
4138 2346 Circle
4297 2346 Circle
4455 2343 Circle
4614 2338 Circle
4772 2330 Circle
4931 2320 Circle
5089 2309 Circle
5248 2297 Circle
5406 2283 Circle
5565 2269 Circle
5723 2255 Circle
5882 2241 Circle
6040 2226 Circle
6199 2212 Circle
6357 2199 Circle
6516 2186 Circle
6674 2174 Circle
6833 2163 Circle
2137 3771 Circle
1.000 UP
1.000 UL
LT6
LCa setrgbcolor
LTb
1782 3591 M
[ [(Helvetica) 180.0 0.0 true true 0 (Honest)]
[(Helvetica) 144.0 -54.0 true true 0 (4)]
] -42.0 MRshow
LT6
LCa setrgbcolor
1890 3591 M
495 0 V
810 1529 M
968 1332 L
159 40 V
158 120 V
159 131 V
158 120 V
159 102 V
158 84 V
159 67 V
158 52 V
159 38 V
158 27 V
159 17 V
158 8 V
159 2 V
158 -2 V
159 -5 V
158 -7 V
159 -8 V
158 -8 V
159 -7 V
158 -7 V
159 -4 V
158 -2 V
159 -1 V
158 3 V
159 5 V
158 8 V
159 10 V
158 12 V
159 13 V
158 14 V
159 13 V
158 13 V
159 11 V
158 10 V
159 6 V
158 4 V
159 0 V
61 -1 V
810 1529 CircleF
968 1332 CircleF
1127 1372 CircleF
1285 1492 CircleF
1444 1623 CircleF
1602 1743 CircleF
1761 1845 CircleF
1919 1929 CircleF
2078 1996 CircleF
2236 2048 CircleF
2395 2086 CircleF
2553 2113 CircleF
2712 2130 CircleF
2870 2138 CircleF
3029 2140 CircleF
3187 2138 CircleF
3346 2133 CircleF
3504 2126 CircleF
3663 2118 CircleF
3821 2110 CircleF
3980 2103 CircleF
4138 2096 CircleF
4297 2092 CircleF
4455 2090 CircleF
4614 2089 CircleF
4772 2092 CircleF
4931 2097 CircleF
5089 2105 CircleF
5248 2115 CircleF
5406 2127 CircleF
5565 2140 CircleF
5723 2154 CircleF
5882 2167 CircleF
6040 2180 CircleF
6199 2191 CircleF
6357 2201 CircleF
6516 2207 CircleF
6674 2211 CircleF
6833 2211 CircleF
2137 3591 CircleF
1.000 UL
LTb
810 4824 N
810 540 L
6084 0 V
0 4284 V
-6084 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
