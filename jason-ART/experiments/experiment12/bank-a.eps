%!PS-Adobe-2.0 EPSF-2.0
%%Title: experiments/experiment12/bank-a.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Mon Sep 22 16:34:29 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (experiments/experiment12/bank-a.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Jomi Fred Hubner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Sep 22 16:34:29 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1242 540 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 540 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1242 1152 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 1152 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20000)]
] -60.0 MRshow
1.000 UL
LTb
1242 1764 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 1764 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40000)]
] -60.0 MRshow
1.000 UL
LTb
1242 2376 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 2376 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60000)]
] -60.0 MRshow
1.000 UL
LTb
1242 2988 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 2988 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 80000)]
] -60.0 MRshow
1.000 UL
LTb
1242 3600 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 3600 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100000)]
] -60.0 MRshow
1.000 UL
LTb
1242 4212 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 4212 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 120000)]
] -60.0 MRshow
1.000 UL
LTb
1242 4824 M
63 0 V
5589 0 R
-63 0 V
stroke
1134 4824 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 140000)]
] -60.0 MRshow
1.000 UL
LTb
1242 540 M
0 63 V
0 4221 R
0 -63 V
stroke
1242 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1807 540 M
0 63 V
0 4221 R
0 -63 V
stroke
1807 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5)]
] -60.0 MCshow
1.000 UL
LTb
2372 540 M
0 63 V
0 4221 R
0 -63 V
stroke
2372 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
2938 540 M
0 63 V
0 4221 R
0 -63 V
stroke
2938 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15)]
] -60.0 MCshow
1.000 UL
LTb
3503 540 M
0 63 V
0 4221 R
0 -63 V
stroke
3503 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
1.000 UL
LTb
4068 540 M
0 63 V
0 4221 R
0 -63 V
stroke
4068 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 25)]
] -60.0 MCshow
1.000 UL
LTb
4633 540 M
0 63 V
0 4221 R
0 -63 V
stroke
4633 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
1.000 UL
LTb
5198 540 M
0 63 V
0 4221 R
0 -63 V
stroke
5198 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 35)]
] -60.0 MCshow
1.000 UL
LTb
5764 540 M
0 63 V
0 4221 R
0 -63 V
stroke
5764 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
1.000 UL
LTb
6329 540 M
0 63 V
0 4221 R
0 -63 V
stroke
6329 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 45)]
] -60.0 MCshow
1.000 UL
LTb
6894 540 M
0 63 V
0 4221 R
0 -63 V
stroke
6894 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 50)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1242 4824 N
0 -4284 V
5652 0 V
0 4284 V
-5652 0 V
Z stroke
LCb setrgbcolor
180 2682 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (money)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
4068 90 M
[ [(Helvetica) 180.0 0.0 true true 0 (step)]
] -60.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2214 4671 M
[ [(Helvetica) 180.0 0.0 true true 0 (Cheating)]
[(Helvetica) 144.0 -54.0 true true 0 (1)]
] -42.0 MRshow
LT0
2322 4671 M
495 0 V
1242 605 M
113 74 V
113 42 V
113 54 V
113 45 V
113 34 V
113 37 V
113 22 V
113 23 V
113 32 V
113 16 V
113 21 V
113 21 V
114 12 V
113 18 V
113 25 V
113 16 V
113 12 V
113 24 V
113 12 V
113 17 V
113 10 V
113 32 V
113 17 V
113 8 V
113 10 V
113 13 V
113 24 V
113 23 V
113 8 V
113 21 V
113 12 V
113 19 V
113 17 V
113 9 V
113 11 V
113 11 V
113 14 V
114 19 V
113 7 V
113 17 V
113 18 V
113 4 V
113 12 V
113 43 V
113 10 V
113 15 V
113 9 V
113 10 V
113 22 V
1242 605 Pls
1355 679 Pls
1468 721 Pls
1581 775 Pls
1694 820 Pls
1807 854 Pls
1920 891 Pls
2033 913 Pls
2146 936 Pls
2259 968 Pls
2372 984 Pls
2485 1005 Pls
2598 1026 Pls
2712 1038 Pls
2825 1056 Pls
2938 1081 Pls
3051 1097 Pls
3164 1109 Pls
3277 1133 Pls
3390 1145 Pls
3503 1162 Pls
3616 1172 Pls
3729 1204 Pls
3842 1221 Pls
3955 1229 Pls
4068 1239 Pls
4181 1252 Pls
4294 1276 Pls
4407 1299 Pls
4520 1307 Pls
4633 1328 Pls
4746 1340 Pls
4859 1359 Pls
4972 1376 Pls
5085 1385 Pls
5198 1396 Pls
5311 1407 Pls
5424 1421 Pls
5538 1440 Pls
5651 1447 Pls
5764 1464 Pls
5877 1482 Pls
5990 1486 Pls
6103 1498 Pls
6216 1541 Pls
6329 1551 Pls
6442 1566 Pls
6555 1575 Pls
6668 1585 Pls
6781 1607 Pls
2569 4671 Pls
1.000 UP
1.000 UL
LT1
LTb
2214 4491 M
[ [(Helvetica) 180.0 0.0 true true 0 (ForTrust)]
] -60.0 MRshow
LT1
2322 4491 M
495 0 V
1242 598 M
113 12 V
113 75 V
113 69 V
113 68 V
113 72 V
113 80 V
113 78 V
113 76 V
113 73 V
113 84 V
113 78 V
113 80 V
114 80 V
113 79 V
113 74 V
113 79 V
113 85 V
113 77 V
113 75 V
113 88 V
113 84 V
113 76 V
113 81 V
113 82 V
113 77 V
113 80 V
113 78 V
113 75 V
113 78 V
113 70 V
113 75 V
113 80 V
113 84 V
113 80 V
113 85 V
113 74 V
113 86 V
114 74 V
113 76 V
113 93 V
113 76 V
113 81 V
113 88 V
113 78 V
113 82 V
113 79 V
113 76 V
113 84 V
113 81 V
1242 598 Crs
1355 610 Crs
1468 685 Crs
1581 754 Crs
1694 822 Crs
1807 894 Crs
1920 974 Crs
2033 1052 Crs
2146 1128 Crs
2259 1201 Crs
2372 1285 Crs
2485 1363 Crs
2598 1443 Crs
2712 1523 Crs
2825 1602 Crs
2938 1676 Crs
3051 1755 Crs
3164 1840 Crs
3277 1917 Crs
3390 1992 Crs
3503 2080 Crs
3616 2164 Crs
3729 2240 Crs
3842 2321 Crs
3955 2403 Crs
4068 2480 Crs
4181 2560 Crs
4294 2638 Crs
4407 2713 Crs
4520 2791 Crs
4633 2861 Crs
4746 2936 Crs
4859 3016 Crs
4972 3100 Crs
5085 3180 Crs
5198 3265 Crs
5311 3339 Crs
5424 3425 Crs
5538 3499 Crs
5651 3575 Crs
5764 3668 Crs
5877 3744 Crs
5990 3825 Crs
6103 3913 Crs
6216 3991 Crs
6329 4073 Crs
6442 4152 Crs
6555 4228 Crs
6668 4312 Crs
6781 4393 Crs
2569 4491 Crs
1.000 UP
1.000 UL
LT2
LTb
2214 4311 M
[ [(Helvetica) 180.0 0.0 true true 0 (Lazy)]
[(Helvetica) 144.0 -54.0 true true 0 (1)]
] -42.0 MRshow
LT2
2322 4311 M
495 0 V
1242 596 M
113 64 V
113 60 V
113 55 V
113 55 V
113 54 V
113 65 V
113 68 V
113 61 V
113 59 V
113 59 V
113 59 V
113 59 V
114 67 V
113 75 V
113 57 V
113 65 V
113 70 V
113 67 V
113 67 V
113 69 V
113 66 V
113 60 V
113 64 V
113 68 V
113 64 V
113 62 V
113 63 V
113 59 V
113 64 V
113 67 V
113 60 V
113 72 V
113 65 V
113 68 V
113 54 V
113 63 V
113 67 V
114 60 V
113 58 V
113 60 V
113 70 V
113 62 V
113 62 V
113 55 V
113 74 V
113 57 V
113 63 V
113 57 V
113 62 V
1242 596 Star
1355 660 Star
1468 720 Star
1581 775 Star
1694 830 Star
1807 884 Star
1920 949 Star
2033 1017 Star
2146 1078 Star
2259 1137 Star
2372 1196 Star
2485 1255 Star
2598 1314 Star
2712 1381 Star
2825 1456 Star
2938 1513 Star
3051 1578 Star
3164 1648 Star
3277 1715 Star
3390 1782 Star
3503 1851 Star
3616 1917 Star
3729 1977 Star
3842 2041 Star
3955 2109 Star
4068 2173 Star
4181 2235 Star
4294 2298 Star
4407 2357 Star
4520 2421 Star
4633 2488 Star
4746 2548 Star
4859 2620 Star
4972 2685 Star
5085 2753 Star
5198 2807 Star
5311 2870 Star
5424 2937 Star
5538 2997 Star
5651 3055 Star
5764 3115 Star
5877 3185 Star
5990 3247 Star
6103 3309 Star
6216 3364 Star
6329 3438 Star
6442 3495 Star
6555 3558 Star
6668 3615 Star
6781 3677 Star
2569 4311 Star
1.000 UP
1.000 UL
LT3
LTb
2214 4131 M
[ [(Helvetica) 180.0 0.0 true true 0 (Lazy)]
[(Helvetica) 144.0 -54.0 true true 0 (2)]
] -42.0 MRshow
LT3
2322 4131 M
495 0 V
1242 597 M
113 58 V
113 57 V
113 61 V
113 53 V
113 41 V
113 60 V
113 54 V
113 58 V
113 61 V
113 68 V
113 66 V
113 63 V
114 80 V
113 63 V
113 66 V
113 58 V
113 72 V
113 52 V
113 78 V
113 57 V
113 64 V
113 65 V
113 58 V
113 63 V
113 74 V
113 75 V
113 56 V
113 57 V
113 63 V
113 67 V
113 65 V
113 63 V
113 64 V
113 66 V
113 63 V
113 65 V
113 57 V
114 66 V
113 64 V
113 52 V
113 52 V
113 63 V
113 62 V
113 59 V
113 57 V
113 62 V
113 66 V
113 70 V
113 54 V
1242 597 Box
1355 655 Box
1468 712 Box
1581 773 Box
1694 826 Box
1807 867 Box
1920 927 Box
2033 981 Box
2146 1039 Box
2259 1100 Box
2372 1168 Box
2485 1234 Box
2598 1297 Box
2712 1377 Box
2825 1440 Box
2938 1506 Box
3051 1564 Box
3164 1636 Box
3277 1688 Box
3390 1766 Box
3503 1823 Box
3616 1887 Box
3729 1952 Box
3842 2010 Box
3955 2073 Box
4068 2147 Box
4181 2222 Box
4294 2278 Box
4407 2335 Box
4520 2398 Box
4633 2465 Box
4746 2530 Box
4859 2593 Box
4972 2657 Box
5085 2723 Box
5198 2786 Box
5311 2851 Box
5424 2908 Box
5538 2974 Box
5651 3038 Box
5764 3090 Box
5877 3142 Box
5990 3205 Box
6103 3267 Box
6216 3326 Box
6329 3383 Box
6442 3445 Box
6555 3511 Box
6668 3581 Box
6781 3635 Box
2569 4131 Box
1.000 UP
1.000 UL
LT4
LTb
2214 3951 M
[ [(Helvetica) 180.0 0.0 true true 0 (Simple)]
[(Helvetica) 144.0 -54.0 true true 0 (1)]
] -42.0 MRshow
LT4
2322 3951 M
495 0 V
1242 598 M
113 46 V
113 76 V
113 63 V
113 61 V
113 66 V
113 57 V
113 59 V
113 60 V
113 53 V
113 54 V
113 64 V
113 53 V
114 51 V
113 55 V
113 57 V
113 66 V
113 54 V
113 60 V
113 50 V
113 40 V
113 65 V
113 52 V
113 60 V
113 57 V
113 57 V
113 54 V
113 55 V
113 68 V
113 54 V
113 55 V
113 68 V
113 67 V
113 60 V
113 67 V
113 52 V
113 58 V
113 52 V
114 57 V
113 68 V
113 57 V
113 55 V
113 55 V
113 53 V
113 64 V
113 60 V
113 51 V
113 58 V
113 58 V
113 60 V
1242 598 BoxF
1355 644 BoxF
1468 720 BoxF
1581 783 BoxF
1694 844 BoxF
1807 910 BoxF
1920 967 BoxF
2033 1026 BoxF
2146 1086 BoxF
2259 1139 BoxF
2372 1193 BoxF
2485 1257 BoxF
2598 1310 BoxF
2712 1361 BoxF
2825 1416 BoxF
2938 1473 BoxF
3051 1539 BoxF
3164 1593 BoxF
3277 1653 BoxF
3390 1703 BoxF
3503 1743 BoxF
3616 1808 BoxF
3729 1860 BoxF
3842 1920 BoxF
3955 1977 BoxF
4068 2034 BoxF
4181 2088 BoxF
4294 2143 BoxF
4407 2211 BoxF
4520 2265 BoxF
4633 2320 BoxF
4746 2388 BoxF
4859 2455 BoxF
4972 2515 BoxF
5085 2582 BoxF
5198 2634 BoxF
5311 2692 BoxF
5424 2744 BoxF
5538 2801 BoxF
5651 2869 BoxF
5764 2926 BoxF
5877 2981 BoxF
5990 3036 BoxF
6103 3089 BoxF
6216 3153 BoxF
6329 3213 BoxF
6442 3264 BoxF
6555 3322 BoxF
6668 3380 BoxF
6781 3440 BoxF
2569 3951 BoxF
1.000 UP
1.000 UL
LT5
LTb
2214 3771 M
[ [(Helvetica) 180.0 0.0 true true 0 (Simple)]
[(Helvetica) 144.0 -54.0 true true 0 (2)]
] -42.0 MRshow
LT5
2322 3771 M
495 0 V
1242 597 M
113 76 V
113 54 V
113 67 V
113 43 V
113 37 V
113 55 V
113 64 V
113 62 V
113 63 V
113 46 V
113 61 V
113 53 V
114 68 V
113 57 V
113 59 V
113 53 V
113 61 V
113 63 V
113 54 V
113 58 V
113 65 V
113 58 V
113 47 V
113 53 V
113 54 V
113 55 V
113 68 V
113 64 V
113 72 V
113 66 V
113 59 V
113 54 V
113 56 V
113 60 V
113 52 V
113 69 V
113 54 V
114 64 V
113 71 V
113 55 V
113 66 V
113 69 V
113 64 V
113 50 V
113 58 V
113 66 V
113 70 V
113 64 V
113 61 V
1242 597 Circle
1355 673 Circle
1468 727 Circle
1581 794 Circle
1694 837 Circle
1807 874 Circle
1920 929 Circle
2033 993 Circle
2146 1055 Circle
2259 1118 Circle
2372 1164 Circle
2485 1225 Circle
2598 1278 Circle
2712 1346 Circle
2825 1403 Circle
2938 1462 Circle
3051 1515 Circle
3164 1576 Circle
3277 1639 Circle
3390 1693 Circle
3503 1751 Circle
3616 1816 Circle
3729 1874 Circle
3842 1921 Circle
3955 1974 Circle
4068 2028 Circle
4181 2083 Circle
4294 2151 Circle
4407 2215 Circle
4520 2287 Circle
4633 2353 Circle
4746 2412 Circle
4859 2466 Circle
4972 2522 Circle
5085 2582 Circle
5198 2634 Circle
5311 2703 Circle
5424 2757 Circle
5538 2821 Circle
5651 2892 Circle
5764 2947 Circle
5877 3013 Circle
5990 3082 Circle
6103 3146 Circle
6216 3196 Circle
6329 3254 Circle
6442 3320 Circle
6555 3390 Circle
6668 3454 Circle
6781 3515 Circle
2569 3771 Circle
1.000 UP
1.000 UL
LT6
LTb
2214 3591 M
[ [(Helvetica) 180.0 0.0 true true 0 (Simple)]
[(Helvetica) 144.0 -54.0 true true 0 (3)]
] -42.0 MRshow
LT6
2322 3591 M
495 0 V
1242 598 M
113 67 V
113 47 V
113 59 V
113 46 V
113 75 V
113 49 V
113 60 V
113 57 V
113 80 V
113 74 V
113 56 V
113 67 V
114 54 V
113 56 V
113 64 V
113 65 V
113 54 V
113 57 V
113 65 V
113 59 V
113 51 V
113 54 V
113 68 V
113 67 V
113 62 V
113 57 V
113 53 V
113 64 V
113 56 V
113 54 V
113 61 V
113 51 V
113 60 V
113 66 V
113 70 V
113 56 V
113 67 V
114 58 V
113 55 V
113 70 V
113 63 V
113 67 V
113 65 V
113 62 V
113 65 V
113 58 V
113 55 V
113 63 V
113 59 V
1242 598 CircleF
1355 665 CircleF
1468 712 CircleF
1581 771 CircleF
1694 817 CircleF
1807 892 CircleF
1920 941 CircleF
2033 1001 CircleF
2146 1058 CircleF
2259 1138 CircleF
2372 1212 CircleF
2485 1268 CircleF
2598 1335 CircleF
2712 1389 CircleF
2825 1445 CircleF
2938 1509 CircleF
3051 1574 CircleF
3164 1628 CircleF
3277 1685 CircleF
3390 1750 CircleF
3503 1809 CircleF
3616 1860 CircleF
3729 1914 CircleF
3842 1982 CircleF
3955 2049 CircleF
4068 2111 CircleF
4181 2168 CircleF
4294 2221 CircleF
4407 2285 CircleF
4520 2341 CircleF
4633 2395 CircleF
4746 2456 CircleF
4859 2507 CircleF
4972 2567 CircleF
5085 2633 CircleF
5198 2703 CircleF
5311 2759 CircleF
5424 2826 CircleF
5538 2884 CircleF
5651 2939 CircleF
5764 3009 CircleF
5877 3072 CircleF
5990 3139 CircleF
6103 3204 CircleF
6216 3266 CircleF
6329 3331 CircleF
6442 3389 CircleF
6555 3444 CircleF
6668 3507 CircleF
6781 3566 CircleF
2569 3591 CircleF
1.000 UP
1.000 UL
LT7
LTb
2214 3411 M
[ [(Helvetica) 180.0 0.0 true true 0 (Simple)]
[(Helvetica) 144.0 -54.0 true true 0 (4)]
] -42.0 MRshow
LT7
2322 3411 M
495 0 V
1242 598 M
113 67 V
113 52 V
113 37 V
113 92 V
113 85 V
113 57 V
113 56 V
113 62 V
113 39 V
113 61 V
113 54 V
113 63 V
114 52 V
113 54 V
113 56 V
113 56 V
113 46 V
113 61 V
113 56 V
113 76 V
113 54 V
113 60 V
113 65 V
113 63 V
113 60 V
113 64 V
113 65 V
113 51 V
113 61 V
113 56 V
113 63 V
113 58 V
113 54 V
113 46 V
113 74 V
113 64 V
113 60 V
114 60 V
113 64 V
113 53 V
113 59 V
113 57 V
113 51 V
113 54 V
113 51 V
113 71 V
113 63 V
113 59 V
113 61 V
1242 598 TriU
1355 665 TriU
1468 717 TriU
1581 754 TriU
1694 846 TriU
1807 931 TriU
1920 988 TriU
2033 1044 TriU
2146 1106 TriU
2259 1145 TriU
2372 1206 TriU
2485 1260 TriU
2598 1323 TriU
2712 1375 TriU
2825 1429 TriU
2938 1485 TriU
3051 1541 TriU
3164 1587 TriU
3277 1648 TriU
3390 1704 TriU
3503 1780 TriU
3616 1834 TriU
3729 1894 TriU
3842 1959 TriU
3955 2022 TriU
4068 2082 TriU
4181 2146 TriU
4294 2211 TriU
4407 2262 TriU
4520 2323 TriU
4633 2379 TriU
4746 2442 TriU
4859 2500 TriU
4972 2554 TriU
5085 2600 TriU
5198 2674 TriU
5311 2738 TriU
5424 2798 TriU
5538 2858 TriU
5651 2922 TriU
5764 2975 TriU
5877 3034 TriU
5990 3091 TriU
6103 3142 TriU
6216 3196 TriU
6329 3247 TriU
6442 3318 TriU
6555 3381 TriU
6668 3440 TriU
6781 3501 TriU
2569 3411 TriU
1.000 UL
LTb
1242 4824 N
0 -4284 V
5652 0 V
0 4284 V
-5652 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
