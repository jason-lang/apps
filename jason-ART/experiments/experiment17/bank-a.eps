%!PS-Adobe-2.0 EPSF-2.0
%%Title: experiments/experiment17/bank-a.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Wed Oct  1 14:41:14 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (experiments/experiment17/bank-a.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Jomi Fred Hubner)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct  1 14:41:14 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1134 540 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 540 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1134 929 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 929 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5000)]
] -60.0 MRshow
1.000 UL
LTb
1134 1319 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 1319 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10000)]
] -60.0 MRshow
1.000 UL
LTb
1134 1708 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 1708 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15000)]
] -60.0 MRshow
1.000 UL
LTb
1134 2098 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 2098 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20000)]
] -60.0 MRshow
1.000 UL
LTb
1134 2487 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 2487 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 25000)]
] -60.0 MRshow
1.000 UL
LTb
1134 2877 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 2877 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30000)]
] -60.0 MRshow
1.000 UL
LTb
1134 3266 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 3266 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 35000)]
] -60.0 MRshow
1.000 UL
LTb
1134 3656 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 3656 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40000)]
] -60.0 MRshow
1.000 UL
LTb
1134 4045 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 4045 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 45000)]
] -60.0 MRshow
1.000 UL
LTb
1134 4435 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 4435 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 50000)]
] -60.0 MRshow
1.000 UL
LTb
1134 4824 M
63 0 V
5697 0 R
-63 0 V
stroke
1026 4824 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 55000)]
] -60.0 MRshow
1.000 UL
LTb
1134 540 M
0 63 V
0 4221 R
0 -63 V
stroke
1134 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1740 540 M
0 63 V
0 4221 R
0 -63 V
stroke
1740 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2)]
] -60.0 MCshow
1.000 UL
LTb
2347 540 M
0 63 V
0 4221 R
0 -63 V
stroke
2347 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 4)]
] -60.0 MCshow
1.000 UL
LTb
2953 540 M
0 63 V
0 4221 R
0 -63 V
stroke
2953 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 6)]
] -60.0 MCshow
1.000 UL
LTb
3559 540 M
0 63 V
0 4221 R
0 -63 V
stroke
3559 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 8)]
] -60.0 MCshow
1.000 UL
LTb
4166 540 M
0 63 V
0 4221 R
0 -63 V
stroke
4166 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
4772 540 M
0 63 V
0 4221 R
0 -63 V
stroke
4772 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 12)]
] -60.0 MCshow
1.000 UL
LTb
5378 540 M
0 63 V
0 4221 R
0 -63 V
stroke
5378 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 14)]
] -60.0 MCshow
1.000 UL
LTb
5985 540 M
0 63 V
0 4221 R
0 -63 V
stroke
5985 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 16)]
] -60.0 MCshow
1.000 UL
LTb
6591 540 M
0 63 V
0 4221 R
0 -63 V
stroke
6591 360 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 18)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1134 4824 N
0 -4284 V
5760 0 V
0 4284 V
-5760 0 V
Z stroke
LCb setrgbcolor
180 2682 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (money)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
4014 90 M
[ [(Helvetica) 180.0 0.0 true true 0 (step)]
] -60.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LCa setrgbcolor
LTb
2430 4671 M
[ [(Helvetica) 180.0 0.0 true true 0 (Cheating)]
] -60.0 MRshow
LT0
LCa setrgbcolor
2538 4671 M
495 0 V
1134 706 M
303 227 V
303 32 V
303 75 V
304 43 V
303 45 V
303 55 V
303 106 V
303 37 V
303 24 V
304 64 V
303 45 V
303 55 V
303 62 V
303 30 V
303 121 V
304 31 V
303 71 V
303 82 V
303 41 V
1134 706 Pls
1437 933 Pls
1740 965 Pls
2043 1040 Pls
2347 1083 Pls
2650 1128 Pls
2953 1183 Pls
3256 1289 Pls
3559 1326 Pls
3862 1350 Pls
4166 1414 Pls
4469 1459 Pls
4772 1514 Pls
5075 1576 Pls
5378 1606 Pls
5681 1727 Pls
5985 1758 Pls
6288 1829 Pls
6591 1911 Pls
6894 1952 Pls
2785 4671 Pls
1.000 UP
1.000 UL
LT1
LCa setrgbcolor
LTb
2430 4491 M
[ [(Helvetica) 180.0 0.0 true true 0 (Connected)]
] -60.0 MRshow
LT1
LCa setrgbcolor
2538 4491 M
495 0 V
1134 678 M
303 28 V
303 153 V
303 191 V
304 153 V
303 150 V
303 143 V
303 134 V
303 139 V
303 143 V
304 126 V
303 135 V
303 143 V
303 160 V
303 186 V
303 159 V
304 211 V
303 175 V
303 178 V
303 180 V
1134 678 Crs
1437 706 Crs
1740 859 Crs
2043 1050 Crs
2347 1203 Crs
2650 1353 Crs
2953 1496 Crs
3256 1630 Crs
3559 1769 Crs
3862 1912 Crs
4166 2038 Crs
4469 2173 Crs
4772 2316 Crs
5075 2476 Crs
5378 2662 Crs
5681 2821 Crs
5985 3032 Crs
6288 3207 Crs
6591 3385 Crs
6894 3565 Crs
2785 4491 Crs
1.000 UP
1.000 UL
LT2
LCa setrgbcolor
LTb
2430 4311 M
[ [(Helvetica) 180.0 0.0 true true 0 (ForTrust)]
] -60.0 MRshow
LT2
LCa setrgbcolor
2538 4311 M
495 0 V
1134 683 M
303 135 V
303 134 V
303 190 V
304 168 V
303 192 V
303 197 V
303 168 V
303 183 V
303 182 V
304 193 V
303 184 V
303 194 V
303 176 V
303 190 V
303 166 V
304 161 V
303 160 V
303 161 V
303 157 V
1134 683 Star
1437 818 Star
1740 952 Star
2043 1142 Star
2347 1310 Star
2650 1502 Star
2953 1699 Star
3256 1867 Star
3559 2050 Star
3862 2232 Star
4166 2425 Star
4469 2609 Star
4772 2803 Star
5075 2979 Star
5378 3169 Star
5681 3335 Star
5985 3496 Star
6288 3656 Star
6591 3817 Star
6894 3974 Star
2785 4311 Star
1.000 UP
1.000 UL
LT3
LCa setrgbcolor
LTb
2430 4131 M
[ [(Helvetica) 180.0 0.0 true true 0 (FordPrefect)]
] -60.0 MRshow
LT3
LCa setrgbcolor
2538 4131 M
495 0 V
1134 695 M
303 165 V
303 131 V
303 122 V
304 158 V
303 117 V
303 114 V
303 153 V
303 147 V
303 162 V
304 167 V
303 171 V
303 143 V
303 151 V
303 164 V
303 160 V
304 158 V
303 165 V
303 171 V
303 156 V
1134 695 Box
1437 860 Box
1740 991 Box
2043 1113 Box
2347 1271 Box
2650 1388 Box
2953 1502 Box
3256 1655 Box
3559 1802 Box
3862 1964 Box
4166 2131 Box
4469 2302 Box
4772 2445 Box
5075 2596 Box
5378 2760 Box
5681 2920 Box
5985 3078 Box
6288 3243 Box
6591 3414 Box
6894 3570 Box
2785 4131 Box
1.000 UP
1.000 UL
LT4
LCa setrgbcolor
LTb
2430 3951 M
[ [(Helvetica) 180.0 0.0 true true 0 (Honest)]
] -60.0 MRshow
LT4
LCa setrgbcolor
2538 3951 M
495 0 V
1134 682 M
303 205 V
303 99 V
303 92 V
304 107 V
303 126 V
303 109 V
303 118 V
303 106 V
303 101 V
304 108 V
303 105 V
303 92 V
303 113 V
303 101 V
303 84 V
304 86 V
303 105 V
303 97 V
303 109 V
1134 682 BoxF
1437 887 BoxF
1740 986 BoxF
2043 1078 BoxF
2347 1185 BoxF
2650 1311 BoxF
2953 1420 BoxF
3256 1538 BoxF
3559 1644 BoxF
3862 1745 BoxF
4166 1853 BoxF
4469 1958 BoxF
4772 2050 BoxF
5075 2163 BoxF
5378 2264 BoxF
5681 2348 BoxF
5985 2434 BoxF
6288 2539 BoxF
6591 2636 BoxF
6894 2745 BoxF
2785 3951 BoxF
1.000 UP
1.000 UL
LT5
LCa setrgbcolor
LTb
2430 3771 M
[ [(Helvetica) 180.0 0.0 true true 0 (Next)]
] -60.0 MRshow
LT5
LCa setrgbcolor
2538 3771 M
495 0 V
1134 685 M
303 29 V
303 292 V
303 133 V
304 200 V
303 185 V
303 172 V
303 135 V
303 187 V
303 166 V
304 147 V
303 156 V
303 190 V
303 162 V
303 140 V
303 153 V
304 167 V
303 165 V
303 139 V
303 185 V
1134 685 Circle
1437 714 Circle
1740 1006 Circle
2043 1139 Circle
2347 1339 Circle
2650 1524 Circle
2953 1696 Circle
3256 1831 Circle
3559 2018 Circle
3862 2184 Circle
4166 2331 Circle
4469 2487 Circle
4772 2677 Circle
5075 2839 Circle
5378 2979 Circle
5681 3132 Circle
5985 3299 Circle
6288 3464 Circle
6591 3603 Circle
6894 3788 Circle
2785 3771 Circle
1.000 UP
1.000 UL
LT6
LCa setrgbcolor
LTb
2430 3591 M
[ [(Helvetica) 180.0 0.0 true true 0 (Uno)]
] -60.0 MRshow
LT6
LCa setrgbcolor
2538 3591 M
495 0 V
1134 678 M
303 240 V
303 171 V
303 211 V
304 182 V
303 196 V
303 222 V
303 199 V
303 210 V
303 236 V
304 213 V
303 215 V
303 197 V
303 191 V
303 205 V
303 179 V
304 203 V
303 177 V
303 193 V
303 190 V
1134 678 CircleF
1437 918 CircleF
1740 1089 CircleF
2043 1300 CircleF
2347 1482 CircleF
2650 1678 CircleF
2953 1900 CircleF
3256 2099 CircleF
3559 2309 CircleF
3862 2545 CircleF
4166 2758 CircleF
4469 2973 CircleF
4772 3170 CircleF
5075 3361 CircleF
5378 3566 CircleF
5681 3745 CircleF
5985 3948 CircleF
6288 4125 CircleF
6591 4318 CircleF
6894 4508 CircleF
2785 3591 CircleF
1.000 UL
LTb
1134 4824 N
0 -4284 V
5760 0 V
0 4284 V
-5760 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
